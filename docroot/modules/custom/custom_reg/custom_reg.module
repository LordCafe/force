<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\views\ViewExecutable;
use Drupal\views\Plugin\views\query\QueryPluginBase;
use Drupal\Core\Url;

function custom_reg_form_user_register_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  //Title alter
  $route = \Drupal::routeMatch()->getCurrentRouteMatch()->getRouteObject();
  $route->setDefault('_title', "313th Recruiting Squadron");
  //End
   $form['account']['pass']['#process'][] = 'custom_reg_form_user_register_form_process_pass';

  $userName = $form['account']['name'];
  $mail = $form['account']['mail'];
  $pass = $form['account']['pass'];


  unset($form['account']['name']);
  unset($form['account']['mail']);
  unset($form['account']['pass']);

  $form['mail'] = $mail;
  $form['mail']['#weight'] = 2;
  $form['mail']['#placeholder'] = "Work Email";
  $form['mail']['#title'] = "";
  $form['mail']['#required'] = true;
  unset($form['mail']['#description']);

  $form['name'] = $userName;
  $form['name']['#weight'] = 6;
  $form['name']['#placeholder'] = "Username";
  $form['name']['#title'] = "";
  unset($form['name']['#description']);

  $form['pass'] = $pass;
  $form['pass']['#weight'] = 7;
  $form['pass']['#placeholder'] = "Password";
  $form['pass']['#title'] = "";

  $form['actions']['submit']['#value'] = t('Register');
}

function custom_reg_form_user_register_form_process_pass(&$element, FormStateInterface $form_state, &$complete_form) {
  $element = \Drupal\Core\Render\Element\PasswordConfirm::processPasswordConfirm($element, $form_state, $complete_form);
  $element['pass1']['#placeholder'] = t('Password');
  $element['pass2']['#placeholder'] = t('Repeat Password');

  return $element;
}

function custom_reg_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  if ($hook == 'form' & !empty($variables['element']['#id'])) {
    $suggestions[] = 'form__' . str_replace('-', '_', $variables['element']['#id']);
  }
}

function custom_reg_page_attachments_alter(array &$attachments) {
  $route = \Drupal::routeMatch()->getCurrentRouteMatch()->getRouteObject();
  if($route->getPath() == '/user/register' || $route->getPath() == '/directory'
    || $route->getPath() == '/dashboard') {
    $attachments['#attached']['library'][] = 'custom_reg/custom_reg';
  }
}


function custom_reg_views_query_alter(ViewExecutable $view, QueryPluginBase $query) {
  if($view->id() == 'user_dashboard' && $view->getDisplay()->display['id'] == 'page_1') {
    $current_user = \Drupal::currentUser();
    $user = \Drupal\user\Entity\User::load($current_user->id());
    $squadronNumber = $user->get('field_registry_number')->getString();
    if(in_array('administrator', $current_user->getRoles())) {
      $squadronNumber = "";
    }
    if($squadronNumber == NULL || $squadronNumber == "") {
        unset($query->where[1]['conditions'][1]);
    }else {
      $query->where[1]['conditions'][1]['value'] = $squadronNumber;
      $query->where[1]['conditions'][1]['operator'] = '=';
    }
  }
}

function custom_reg_user_presave(Drupal\Core\Entity\EntityInterface $entity) {
  if($entity->isNew() && $entity->get('field_check_squadron')->getString() == '0') {
    $entity->addRole('recruiter');
  }
  else {
    $email = $entity->get('mail')->getString();
    $username = $entity->get('name')->getString();
    $squadronNumber = $entity->get('field_registry_number')->getString();
    $to = 'apexa.shah@blingby.com';
    $mailManager = \Drupal::service('plugin.manager.mail');
    $params['message'] = $username . ' HAS REQUESTED ADMIN ACCESS FOR ' . $squadronNumber . '. THEIR EMAIL ADDRESS IS ' . $email;

    $params['subject'] = $username . ' has requested admin access for ' . $squadronNumber;
    $result = $mailManager->mail('custom_reg', 'squadron_user', $to, 'en', $params, NULL, TRUE);
  }
}
function custom_reg_entity_insert(\Drupal\Core\Entity\EntityInterface $entity) {
  if($entity->bundle() == 'user') {
    $db = \Drupal::database();
    $userId = $entity->id();
    $zipcodes = $entity->get('field_zip_codes')->getString();
    $zipArray = explode(',', $zipcodes);
    $db->delete('user_zipcodes')
        ->condition('user_id', $userId)
        ->execute();
    foreach ($zipArray as $key => $value) {
      $db->insert('user_zipcodes')->fields([
        'user_id' => $userId,
        'zipcode' => $value
        ])->execute();
    }
  }
}

function custom_reg_form_alter(&$form, &$form_state, $form_id) {
  switch ($form_id) {
    case 'user_register_form':
      $form['actions']['submit']['#submit'][] = 'redirect_after_registration_user_register_submit';
      break;
    case 'user_login_form':
      //Title alter
      $route = \Drupal::routeMatch()->getCurrentRouteMatch()->getRouteObject();
      $route->setDefault('_title', "313th Recruiting Squadron");
      $form['name']['#description'] = t('');
      $form['name']['#attributes']['placeholder'] = t( 'Username' );
      $form['pass']['#attributes']['placeholder'] = t( 'Password' );
  }
}

function redirect_after_registration_user_register_submit($form, &$form_state) {
    $url = Url::fromUri('internal:' . '/dashboard');
    $form_state->setRedirectUrl($url);
}

function custom_reg_block_build_alter(array &$build, \Drupal\Core\Block\BlockPluginInterface $block) {
  if ('system_branding_block' == $block->getPluginId()) {
    $build['#cache']['contexts'][] = 'url.path';
  }
}


function custom_reg_mail($key, &$message, $params) {
 $options = array(
   'langcode' => $message['langcode'],
 );

 switch ($key) {
   case 'squadron_user':
     $message['from'] = \Drupal::config('system.site')->get('mail');
     $message['subject'] = $params['subject'];
     $message['body'][] = $params['message'];
     break;
 }

// function custom_reg_node_update($node){
//   if (isset($node->original->status) && $node->original->status == 0 && $node->status == 1){
//      kint($node);die;
//   }
// }

}
